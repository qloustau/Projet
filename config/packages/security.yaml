security:
  encoders:
    App\Entity\Personne:
      algorithm: argon2i

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    # used to reload user from session & other features (e.g. switch_user)
   # in_memory:
    #  memory:
     #   users:
      #    admin:
       #     password: kitten
        #    roles: 'ROLE_ADMIN'
    app_user_provider:
      entity:
        class: App\Entity\Personne
        property: email
  firewalls:

    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      anonymous: true

      logout:
        path:   /logout
      guard:
          authenticators:
              - App\Security\LoginFormAuthenticator



      # activate different ways to authenticate

      # http_basic: true
      # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

      # form_login: true
    # https://symfony.com/doc/current/security/form_login_setup.html

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
  # - { path: ^/admin, roles: ROLE_ADMIN }
  # - { path: ^/profile, roles: ROLE_USER }

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        our_db_provider:
            entity:
                class: App:User
                property: username

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

    encoders:
        App\Entity\User:
            algorithm: bcrypt
            cost: 12

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            form_login:
                login_path: login
                check_path: login
            # activate different ways to authenticate

            #http_basic: true
            provider: our_db_provider


            logout:
                invalidate_session: true
                path:   /logout
                target: /

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

